{{ if .Values.scripts.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "poktroll.fullname" . }}-scripts
data:
  dev.sh: |-
    #!/bin/sh

    # Validator state is required to run the node, if it doesn't exist
    if [ ! -f /root/.pocket/data/priv_validator_state.json ]; then
      echo '{"height":"0","round":0,"step":0}' > /root/.pocket/data/priv_validator_state.json
      echo 'Generated new priv_validator_state.json'
    fi

    # create a random Namespace ID for your rollup to post blocks to, if it doesn't exist
    if [ ! -f /root/.pocket/data/namespace-id ]; then
      openssl rand -hex 8 > /root/.pocket/data/namespace-id
    fi
    NAMESPACE=$(cat /root/.pocket/data/namespace-id)

    # If we're starting from scratch, we need to know what black the DA is at
    if [ ! -f /root/.pocket/data/da-block-height ]; then
      curl {{ .Values.dataAvailability.celestia.consensus_rpc_url }}/block | jq -r '.result.block.header.height' > /root/.pocket/data/da-block-height
    fi
    DA_BLOCK_HEIGHT=$(cat /root/.pocket/data/da-block-height)

    echo "AUTH_TOKEN is: $AUTH_TOKEN"
    echo -e "Your NAMESPACE is $NAMESPACE \n\n Your DA_BLOCK_HEIGHT is $DA_BLOCK_HEIGHT"

    # ls -la /root/.pocket/config-src/
    mkdir -p /root/.pocket/config/
    cp -r -L /root/.pocket/config-src/* /root/.pocket/config/
    ls -la /root/.pocket/config/
    echo "\n/root/.pocket/config/priv_validator_key.json:"
    cat /root/.pocket/config/priv_validator_key.json
    echo "\n/root/.pocket/config/node_key.json:"
    cat /root/.pocket/config/node_key.json
    echo "\n/root/.pocket/config/genesis.json | jq '.validators':"
    cat /root/.pocket/config/genesis.json | jq '.validators'

    # sleep 9999

    # start the node

    # IMPORTANT: Any flags that need to be used to modify the sequencer's behaviour (e.g. block time) can be modified
    # on the following line. See the following link for the full parameter list: https://github.com/rollkit/rollkit/blob/main/config/config.go
    
    # You can attach to this process with delve (dlv) for debugging purpose with `dlv attach $(pgrep poktrolld) --listen :40004 --headless --api-version=2 --accept-multiclient` - run inside the container!
    poktrolld start --home=/root/.pocket/ --rollkit.aggregator=true --rollkit.da_layer=celestia --rollkit.da_config='{"base_url":"{{ .Values.dataAvailability.celestia.da_rpc_url }}","timeout":{{ printf "%.0f" .Values.dataAvailability.timeout }},"fee":{{ printf "%.0f" .Values.dataAvailability.fee }},"gas_limit":{{ printf "%.0f" .Values.dataAvailability.gas_limit }},"auth_token":"'$AUTH_TOKEN'"}' --rollkit.namespace_id=$NAMESPACE --rollkit.da_start_height=$DA_BLOCK_HEIGHT --rpc.laddr=tcp://0.0.0.0:36657 --p2p.laddr="0.0.0.0:36656" --grpc.address=0.0.0.0:36658

    # OR debug the node (uncomment this line but comment previous line)
    # dlv exec /usr/local/bin/poktrolld --listen :40004 --headless --api-version=2 --accept-multiclient -- start --home=/root/.pocket/ --rollkit.aggregator=true --rollkit.da_layer=celestia --rollkit.da_config='{"base_url":"{{ .Values.dataAvailability.celestia.da_rpc_url }}","timeout":{{ printf "%.0f" .Values.dataAvailability.timeout }},"fee":{{ printf "%.0f" .Values.dataAvailability.fee }},"gas_limit":{{ printf "%.0f" .Values.dataAvailability.gas_limit }},"auth_token":"'$AUTH_TOKEN'"}' --rollkit.namespace_id=$NAMESPACE --rollkit.da_start_height=$DA_BLOCK_HEIGHT --rpc.laddr=tcp://0.0.0.0:36657 --p2p.laddr="0.0.0.0:36656"
  prod.sh: |-
    #!/bin/sh

    # Make sure the data directory exists
    if [ ! -f /root/.pocket/data/priv_validator_state.json ]; then
      echo '{"height":"0","round":0,"step":0}' > /root/.pocket/data/priv_validator_state.json
    fi

    # Put a namespace id in place
    echo "{{ .Values.prod.namespace }}" > /root/.pocket/data/namespace-id
    NAMESPACE=$(cat /root/.pocket/data/namespace-id)

    if [ ! -f /root/.pocket/data/da-block-height ]; then
      curl -s https://rpc-mocha.pops.one/block |jq -r '.result.block.header.height' > /root/.pocket/data/da-block-height
    fi
    DA_BLOCK_HEIGHT=$(cat /root/.pocket/data/da-block-height)

    mkdir -p /root/.pocket/config/
    cp -r -L /root/.pocket/config-src/* /root/.pocket/config/
    ls -la /root/.pocket/config/
    echo "\n/root/.pocket/config/priv_validator_key.json:"
    cat /root/.pocket/config/priv_validator_key.json
    echo "\n/root/.pocket/config/node_key.json:"
    cat /root/.pocket/config/node_key.json
    echo "\n/root/.pocket/config/genesis.json | jq '.validators':"
    cat /root/.pocket/config/genesis.json | jq '.validators'

    # start the node
    # You can attach to this process with delve (dlv) for debugging purpose with `dlv attach $(pgrep poktrolld) --listen :40004 --headless --api-version=2 --accept-multiclient` - run inside the container!
    poktrolld start --home=/root/.pocket/ --rollkit.aggregator=true --rollkit.da_layer=celestia --rollkit.da_config='{"base_url":"{{ .Values.dataAvailability.celestia.da_rpc_url }}","timeout":{{ printf "%.0f" .Values.dataAvailability.timeout }},"fee":{{ printf "%.0f" .Values.dataAvailability.fee }},"gas_limit":{{ printf "%.0f" .Values.dataAvailability.gas_limit }},"auth_token":"'$AUTH_TOKEN'"}' --rollkit.namespace_id=$NAMESPACE --rollkit.da_start_height=$DA_BLOCK_HEIGHT --rpc.laddr=tcp://0.0.0.0:36657 --p2p.laddr="0.0.0.0:36656" --grpc.address=0.0.0.0:36658
{{ end }}
