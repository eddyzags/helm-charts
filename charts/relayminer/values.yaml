# Default values for relayminer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/pokt-network/poktrolld
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

configsConfigMapName: poktrolld-configs # TODO(@okdas): provision in the chart
keysConfigMapName: poktrolld-keys # TODO(@okdas): provision in the chart

config:
  # tcp://<host>:<port> to a full pocket node grpc endpoint for reading data
  query_node_grpc_url: tcp://poktroll-sequencer:36658
  # tcp://<host>:<port> to a pocket node grpc endpoint that gossips transactions throughout the network (may or may not be the sequencer)
  network_node_grpc_url: tcp://poktroll-sequencer:36658
  # grpc client insecure flag
  grpc_insecure: true
  # tcp://<host>:<port> to a full pocket node websocket endpoint for listening for on-chain events
  pocket_node_websocket_url: tcp://poktroll-sequencer:36657
  # Name of the key (in the keyring) to sign transactions
  signing_key_name: supplier1
  # TODO_TECHDEBT(#137, #130): Once the `relayer.json` config file is implemented AND a local LLM RPC service
  # is supported on LocalNet, this needs to be expanded to include more than one service. The ability to support
  # multiple services is already in place but currently (as seen below) is hardcoded.
  # TODO_UPNEXT(@okdas): this hostname should be updated to match that of the in-tilt anvil service.
  proxied_service_endpoints:
    anvil: http://anvil:8547
  # Path to where the data backing SMT KV store exists on disk
  smt_store_path: smt_stores

keyringBackend: test

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8545

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
